openapi: 3.0.3
info:
  title: NLP Services API
  description: An all-in-one LLM-based NLP API for doing NLP tasks.
  version: 1.0.0
  contact:
    name: Aditya Patange

servers:
  - url: http://localhost:3000
    description: Local development server

paths:
  /sentiment-analysis:
    post:
      summary: Perform sentiment analysis on a given text.
      tags:
        - Sentiment Analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to analyze for sentiment.
                  example: "The movie was fantastic!"
                options:
                  type: object
                  description: Additional options for sentiment analysis.
              required:
                - text
      responses:
        "200":
          description: The sentiment analysis result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sentiment:
                    type: string
                    description: The sentiment of the text.
                    example: "positive"
                  confidence:
                    type: number
                    description: Confidence score of the sentiment analysis.
                    example: 0.95
        "400":
          description: Bad Request - Missing or invalid parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Text is required."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."
      parameters:
        - name: llm-api-key
          in: header
          required: true
          schema:
            type: string
          description: API key for authentication

  /summarizer:
    post:
      summary: Summarize a given text.
      tags:
        - Summarizer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to summarize.
                  example: "This is a long document that needs to be summarized."
                options:
                  type: object
                  description: Additional options for summarization.
              required:
                - text
      responses:
        "200":
          description: The summarization result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: string
                    description: The summary of the text.
                    example: "A brief summary of the document."
        "400":
          description: Bad Request - Missing or invalid parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Text is required."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."
      parameters:
        - name: llm-api-key
          in: header
          required: true
          schema:
            type: string
          description: API key for authentication

  /translator/detect-language:
    post:
      summary: Detect the language of a given text.
      tags:
        - Translator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text whose language needs to be detected.
                  example: "Bonjour tout le monde!"
                options:
                  type: object
                  description: Additional options for language detection.
              required:
                - text
      responses:
        "200":
          description: The language detection result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  language:
                    type: string
                    description: The detected language of the text.
                    example: "French"
                  confidence:
                    type: number
                    description: Confidence score of the language detection.
                    example: 0.98
        "400":
          description: Bad Request - Missing or invalid parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Text is required."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."
      parameters:
        - name: llm-api-key
          in: header
          required: true
          schema:
            type: string
          description: API key for authentication

  /translator/translate:
    post:
      summary: Translate a given text to a specified language.
      tags:
        - Translator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to translate.
                  example: "Hello, how are you?"
                options:
                  type: object
                  description: Additional options for translation, including target language.
              required:
                - text
      responses:
        "200":
          description: The translation result.
          content:
            application/json:
              schema:
                type: object
                properties:
                  translatedText:
                    type: string
                    description: The translated text.
                    example: "Bonjour, comment Ã§a va?"
        "400":
          description: Bad Request - Missing or invalid parameters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Text is required."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "An unexpected error occurred."
      parameters:
        - name: llm-api-key
          in: header
          required: true
          schema:
            type: string
          description: API key for authentication

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: llm-api-key
